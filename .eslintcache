[{"/Users/lucas-illiano/Desktop/Web/ADRAR/react/amiibo-tp-list-icon/src/index.js":"1","/Users/lucas-illiano/Desktop/Web/ADRAR/react/amiibo-tp-list-icon/src/App.js":"2","/Users/lucas-illiano/Desktop/Web/ADRAR/react/amiibo-tp-list-icon/src/MainContainer.js":"3","/Users/lucas-illiano/Desktop/Web/ADRAR/react/amiibo-tp-list-icon/src/Spinner.js":"4","/Users/lucas-illiano/Desktop/Web/ADRAR/react/amiibo-tp-list-icon/src/reducer/network.js":"5","/Users/lucas-illiano/Desktop/Web/ADRAR/react/amiibo-tp-list-icon/src/reducer/appConfig.js":"6","/Users/lucas-illiano/Desktop/Web/ADRAR/react/amiibo-tp-list-icon/src/menu/MenuContainer.js":"7","/Users/lucas-illiano/Desktop/Web/ADRAR/react/amiibo-tp-list-icon/src/view/ViewContainer.js":"8","/Users/lucas-illiano/Desktop/Web/ADRAR/react/amiibo-tp-list-icon/src/view/Card.js":"9","/Users/lucas-illiano/Desktop/Web/ADRAR/react/amiibo-tp-list-icon/src/menu/MenuItem.js":"10"},{"size":219,"mtime":1610980791000,"results":"11","hashOfConfig":"12"},{"size":936,"mtime":1611774182000,"results":"13","hashOfConfig":"12"},{"size":305,"mtime":1611755416000,"results":"14","hashOfConfig":"12"},{"size":288,"mtime":1611652919000,"results":"15","hashOfConfig":"12"},{"size":1798,"mtime":1611773159000,"results":"16","hashOfConfig":"12"},{"size":1104,"mtime":1614954673526,"results":"17","hashOfConfig":"12"},{"size":820,"mtime":1612183197492,"results":"18","hashOfConfig":"12"},{"size":3862,"mtime":1614959046646,"results":"19","hashOfConfig":"12"},{"size":1596,"mtime":1612183574424,"results":"20","hashOfConfig":"12"},{"size":1331,"mtime":1611673700000,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"14jlhyr",{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"24"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"24"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"/Users/lucas-illiano/Desktop/Web/ADRAR/react/amiibo-tp-list-icon/src/index.js",[],["46","47"],"/Users/lucas-illiano/Desktop/Web/ADRAR/react/amiibo-tp-list-icon/src/App.js",["48"],"import {useState, useEffect} from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\n\nimport AppConfigReducer from \"./reducer/appConfig\";\nimport AppNetworkReducer from \"./reducer/network\";\nimport MainContainer from \"./MainContainer\";\nimport Spinner from \"./Spinner\";\n\nfunction App() {\n  const [reducerState] = AppConfigReducer();\n  const [networkState, networkAction] = AppNetworkReducer();\n\n  const [child, setChild] = useState(<Spinner />);\n\n  useEffect(() => {\n    networkAction({\n      type: \"loadMenu\",\n      baseURL: reducerState.baseURL,\n      config: reducerState.config\n    });\n  }, []);\n\n  useEffect(() => {\n    if (networkState.menuList) setChild(<MainContainer />);\n  }, [networkState.menuList]);\n\n  return (\n    <Router>\n      <Switch>\n        <Route exact path={[\"/\", \"/:category/:item\"]}>\n          {child}\n        </Route>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","/Users/lucas-illiano/Desktop/Web/ADRAR/react/amiibo-tp-list-icon/src/MainContainer.js",[],"/Users/lucas-illiano/Desktop/Web/ADRAR/react/amiibo-tp-list-icon/src/Spinner.js",[],"/Users/lucas-illiano/Desktop/Web/ADRAR/react/amiibo-tp-list-icon/src/reducer/network.js",[],"/Users/lucas-illiano/Desktop/Web/ADRAR/react/amiibo-tp-list-icon/src/reducer/appConfig.js",[],"/Users/lucas-illiano/Desktop/Web/ADRAR/react/amiibo-tp-list-icon/src/menu/MenuContainer.js",[],"/Users/lucas-illiano/Desktop/Web/ADRAR/react/amiibo-tp-list-icon/src/view/ViewContainer.js",["49","50","51"],"import {useState, useEffect } from 'react';\nimport {useParams} from \"react-router-dom\";\nimport Switch from \"react-switch\";\nimport AppConfigReducer from \"../reducer/appConfig\";\nimport AppNetworkReducer from \"../reducer/network\";\nimport { FixedSizeList as List} from \"react-window\";\nimport AutoSizer from \"react-virtualized-auto-sizer\";\nimport SwitchDarkMode from \"react-switch\";\nimport Card from \"./Card\";\n\nimport \"./ViewContainer.css\";\n\nconst ViewContainer = () => {\n  const [cardList, setCardList] = useState([]);\n\n  const defaultHeaderText = \"Please click on a menu item\";\n  const [headerText, setHeaderText] = useState(defaultHeaderText);\n\n  const [reducerState, reducerAction] = AppConfigReducer();\n  const {config, viewMode, viewColorMode} = reducerState;\n\n  const [networkState, networkAction] = AppNetworkReducer();\n\n  const {\n    category,\n    item\n  } = useParams();\n  const {viewList} = networkState;\n  useEffect(() => {\n    const cardArray = viewList.map(\n      (element, index) => {\n        return <Card data={element} key={`card_${index}`} />;\n      }\n    );\n    if (viewList.length) setHeaderText(oldState => `${oldState} (${cardArray.length})`);\n    setCardList(cardArray);\n  }, [networkState]);\n\n  useEffect(() => {\n    networkAction({type: \"resetView\"});\n\n    for (let i = 0; i < config.length; i += 1) {\n      if(config[i].url === category) {\n        const text = `${config[i].name} / ${item}`;\n        setHeaderText(text);\n        networkAction({\n          type: \"loadView\",\n          url: `${config[i].viewUrl}${item}`\n        });\n        return;\n      }\n    }\n    setHeaderText(defaultHeaderText);\n  }, [config, category, item]);\n\n  const switchChange = (checked) => {\n    reducerAction({\n      type: \"setViewMode\",\n      payload:  checked ? \"list\" : \"icon\"\n    });\n  }\n\n  const switchChangeColor = (checked) => {\n    reducerAction({\n      type: \"setViewColorMode\",\n      payload: checked ? \"lightMode\" : \"darkMode\"\n    });\n  }\n\n  const Row = ({ index, style }) => (\n    <div style={style}>\n      <div className=\"listItem\">\n        <img src={viewList[index].image}/>\n        <div className=\"text\">\n          {viewList[index].name}\n        </div>\n        <div className=\"text\">\n          {viewList[index].gameSeries}\n        </div>\n        <div className=\"text\">\n          {viewList[index].character}\n        </div>\n\n      </div>\n    </div>\n  );\n\n  let viewColorModeDisplay = \"viewContainer viewLightMode\";\n\n  if (viewColorMode === \"darkMode\") {\n    viewColorModeDisplay=\"viewContainer viewDarkMode\";\n    \n  }\n\n  console.log(\"view color mode value: \"+viewColorModeDisplay)\n\n  \n  let viewModeDisplay = \n    <div className=\"scroller\">\n      {cardList}\n    </div>;\n  if (viewMode === \"list\") {\n    viewModeDisplay = \n    <AutoSizer>\n      {({ height, width}) => (\n        <List\n          className=\"list\"\n          height={height}\n          itemCount={viewList.length}\n          itemSize={110}\n          width={width}\n        >\n          {Row}\n        </List>\n      )}\n    </AutoSizer>\n  }\n\n  return(\n    <div className={viewColorModeDisplay === \"viewContainer viewLightMode\" ? \"viewContainer viewLightMode\" : \"viewContainer viewDarkMode\"}>\n      <div className=\"header\">\n        <div className=\"switch\">\n          <span>Dark</span>\n            <SwitchDarkMode \n              checked={viewColorMode === \"lightMode\"}\n              onChange={switchChangeColor}\n            />\n          <span>Light</span>\n        </div>\n        <div className=\"headerText\">\n          {headerText}\n        </div>\n        <div className=\"switch\">\n          <span>Card</span>\n            <Switch \n              checked={viewMode === \"list\"}\n              onChange={switchChange}\n            />\n          <span>List</span>\n        </div>\n      </div>\n      <div className=\"view\">\n        {viewModeDisplay}\n      </div>\n    </div>\n  );\n}\n\nexport default ViewContainer;\n","/Users/lucas-illiano/Desktop/Web/ADRAR/react/amiibo-tp-list-icon/src/view/Card.js",[],["52","53"],"/Users/lucas-illiano/Desktop/Web/ADRAR/react/amiibo-tp-list-icon/src/menu/MenuItem.js",[],{"ruleId":"54","replacedBy":"55"},{"ruleId":"56","replacedBy":"57"},{"ruleId":"58","severity":1,"message":"59","line":25,"column":6,"nodeType":"60","endLine":25,"endColumn":8,"suggestions":"61"},{"ruleId":"58","severity":1,"message":"62","line":37,"column":6,"nodeType":"60","endLine":37,"endColumn":20,"suggestions":"63"},{"ruleId":"58","severity":1,"message":"64","line":54,"column":6,"nodeType":"60","endLine":54,"endColumn":30,"suggestions":"65"},{"ruleId":"66","severity":1,"message":"67","line":73,"column":9,"nodeType":"68","endLine":73,"endColumn":43},{"ruleId":"54","replacedBy":"69"},{"ruleId":"56","replacedBy":"70"},"no-native-reassign",["71"],"no-negated-in-lhs",["72"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'networkAction', 'reducerState.baseURL', and 'reducerState.config'. Either include them or remove the dependency array.","ArrayExpression",["73"],"React Hook useEffect has a missing dependency: 'viewList'. Either include it or remove the dependency array.",["74"],"React Hook useEffect has a missing dependency: 'networkAction'. Either include it or remove the dependency array.",["75"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["71"],["72"],"no-global-assign","no-unsafe-negation",{"desc":"76","fix":"77"},{"desc":"78","fix":"79"},{"desc":"80","fix":"81"},"Update the dependencies array to be: [networkAction, reducerState.baseURL, reducerState.config]",{"range":"82","text":"83"},"Update the dependencies array to be: [networkState, viewList]",{"range":"84","text":"85"},"Update the dependencies array to be: [config, category, item, networkAction]",{"range":"86","text":"87"},[631,633],"[networkAction, reducerState.baseURL, reducerState.config]",[1194,1208],"[networkState, viewList]",[1624,1648],"[config, category, item, networkAction]"]